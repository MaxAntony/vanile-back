image: node:18

stages:
  - lint
  - test
  - build
  - security
  - deploy

default:
  interruptible: true # Cancela jobs redundantes en caso de nuevos commits
  retry: 2 # Reintenta los jobs fallidos hasta 2 veces
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - node_modules/
    policy: pull-push # Intenta usar el cache más reciente y luego actualiza

variables:
  NODE_ENV: development
  CI_SECURITY_AUDIT: 'true' # Para habilitar auditorías de seguridad condicionales

before_script:
  - corepack enable
  - pnpm ci

lint:
  stage: lint
  script:
    - pnpm run lint
  allow_failure: false # El linter no debe fallar

test:
  stage: test
  script:
    - pnpm run test
    - pnpm run test:e2e
  artifacts:
    reports:
      junit: test-results.xml
    paths:
      - coverage/
    expire_in: 1 week
  coverage: '/^Statements\s*:\s*([\d.]+)%/' # Extrae métricas de cobertura si usas Jest

build:
  stage: build
  script:
    - pnpm run build
  artifacts:
    paths:
      - dist/
    expire_in: 1 week

security_audit:
  stage: security
  script:
    - pnpm audit --production
    - pnpm audit --json > audit-report.json
  artifacts:
    reports:
      dependency_scanning: audit-report.json
    paths:
      - audit-report.json
    expire_in: 1 week
  only:
    - main

deploy:
  stage: deploy
  variables:
    NODE_ENV: production
  script:
    - echo "Deploying application..."
    - ls dist # Reemplazar con lógica real de despliegue
  only:
    - tags
  environment:
    name: production
    url: https://example.com # Reemplaza con tu URL
