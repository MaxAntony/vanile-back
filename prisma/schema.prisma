generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int            @id @default(autoincrement())
  name         String         @db.VarChar(255)
  email        String         @unique @db.VarChar(255)
  password     String
  CashRegister CashRegister[]
}

model Item {
  id         Int         @id @default(autoincrement())
  name       String      @unique
  price      Float
  imageUrl   String
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  orderItems OrderItem[]
}

model Order {
  id          Int         @id @default(autoincrement())
  totalAmount Float
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  items       OrderItem[]
}

model OrderItem {
  id       Int   @id @default(autoincrement())
  orderId  Int
  itemId   Int
  quantity Int   @default(0)
  item     Item  @relation(fields: [itemId], references: [id])
  order    Order @relation(fields: [orderId], references: [id])
}

model CashRegister {
  id            Int                @id @default(autoincrement())
  openDate      DateTime           @default(now())
  closeDate     DateTime?
  initialAmount Int                @default(0)
  finalAmount   Int?
  status        CashRegisterStatus @default(OPEN)
  userId        Int
  User          User               @relation(fields: [userId], references: [id])
  Transactions  Transaction[]
}

model Transaction {
  id               Int             @id @default(autoincrement())
  cashRegisteredId Int
  type             TransactionType
  amount           Int
  description      String
  createdAt        DateTime        @default(now())
  CashRegister     CashRegister    @relation(fields: [cashRegisteredId], references: [id])
}

enum CashRegisterStatus {
  OPEN
  CLOSE
}

enum TransactionType {
  INCOME
  EXPENSE
}
